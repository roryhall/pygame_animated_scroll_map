# Create levels & maps

import pygame
from pygame import *

MAP_HEIGHT = 30
MAP_WIDTH  = 60
TILE_SIZE = 32


class SolidMapSprites (pygame.sprite.Sprite):
    def __init__(self, pos, filename):
        pygame.sprite.Sprite.__init__(self)
        self.image = pygame.image.load(filename).convert()        
        self.rect = self.image.get_rect()             
        self.rect.x = pos[0]
        self.rect.y = pos[1]
        
    def update(self):
        pass

def createLevel(TILE_SIZE, wall_list, entityGroup):
    for row in range(MAP_HEIGHT):
        for column in range(MAP_WIDTH):
            element = map_textures[LEVEL_01[row][column]]       
            pos = (column * TILE_SIZE,row * TILE_SIZE)
            tile = SolidMapSprites(pos, element)

            obsticles = ["W","B","X"]
            for item in obsticles:
                if element == map_textures[item]:
                    wall_list.append(tile)
                    entityGroup.add(tile)                    

            roaming = ["P","G"]
            for item in roaming:
                if element == map_textures[item]:
                    entityGroup.add(tile)



        
map_textures = {
        "P":"optImages/pavers_32opt.png",
        "W":"images3/brick32.png",
        "G":"images3/grass32.png",
        "B":"images3/hedge32.png",
        "X":"images3/pond32.png"
        }

LEVEL_01 = [
"WWWWWWWWWWWWWWWWWWWWWWWWWWBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBB",
"WPPPPPPPWPPPWGGGGGGGBBBBBBBBBWBBBBBBBBBBBBBBBBBBBBBBBBBBBBBB",
"WPPPPPPPPPPPWGGGGGGGBPPPPPPPBWPPPPPPPPPPBBBBBBBBBBBBBBBBBBBB",
"WPPPPPPPPPPPWWWGGGBBBPPPPPPPBWPPPPPPPPPPGGXXXBBBBBBBBBBBBBBB",
"WWPPPPPPPPPPPPGGGGGBBPPPPPPBBWGGPPPPPPPPGXXXXGGGGGBBBBBBBBBB",
"WWPPPPPPPPPPPPGGGGGBBBPPBBBBWWGGPPPPPPPPGGGGGGGGGBBBXXBBBBBB",
"WWWWWPPWWWPPPWWWWWWWWWGGWWWWWWWWWWWPPWWWPPPGGGGGGGGGBBBBBBBB",
"WPPPPPPWBWPPPWPPPPPPWBGGBGGGGGGPPPPPPWBWPPPWGGGGGGGBBBBBBBBB",
"WPPPPPPWBWPPPWBGGGGGGGGGGGGGGGGPPPPPPWBWPPPWBGGGGGGGGGGGGGBB",
"WPPBBPPWBWPPPWBGGGGGGGGGGGGGBWWPPBBPPWBBPPPWBGGGGGGGGGGGGGBB",
"WPPBBPPWWWPPPWBGGGBBGGGGGGGGBWWPPBBPPBBBPPPWBGGGBBBGGGGGGGBB",
"WPPPPPPPPPPPPPPPGGBBPGGGGGGGBWWPPPPPPPPPPPPPPPGGBBBGGGGGGGBB",
"WPPPPPPPPPPPPPPPPPPWPWWWWWWWWWWWPPPPPPPPPPPPPPPPPPWWWWWGWWWW",
"WPPPPXXXXXXXBBBPPPPWPWWWWWWWWWWPPGGXXXXXXXBBBPPPPWWWWWWGWWWW",
"WBBPPPPXXXXXXXBBBPPWPWWWWWWWWWWBBPPGGXXXXXXXBBBPPWWWWWWGWWWW",
"WWBPPPPPPXXXXXXXXPPWPWWWWWWWWWWWBGGGGGGGXXXXXXXXPPWWWWWWGWWWW",
"WWBBBGPPPPPXXXBBBPPPPGGWWWWWWWWWBBBGGGGGGXXXBBBPPWWWWWWGWWWW",
"WBBBBGGGPXXXXXXXXXPPPGGWWWWWWWWBBBBGGGGGGPPPPPPPPWWWWWWGWWWW",
"WBBBBBBBBXXXXXXXXXXXXGGGWWWWWWWBBBBBBBBGGPPPPPPPPWWWWWWGWWWW",
"WWWWWWWWWWXXXXXXXXXXXXGGWWWWWWWWWWWWWWWWWPPWWWWWWWWWWWWGWWWW",
"WPPBBPPBBBXXXXXXXGGGGGGGGGBBBWWPPBBPPWBWPPPWBGGGBBGGGGGGGGBW",
"WPPBBPPBBBXXXXXXXGBBWGGGGGGGBWWPPBBPPWWWPPPWBGGGBBWGGGGGGGBW",
"WPPPPPPPXXXXXXXGGGBBWGGGGGGGBWWPPPPPPPPPPPPPPPGGBBWGGGGGGGBW",
"WPPPPXXXXXXXXXXXXGBWWGGGWWGGGGGPPPPPPPPPPPPPPPPPPPWWWWWWWWWW",
"WPPPPXXXXXXXBBBPPPPGGGGGWWWGGGGPPPPXXXXXXXBBBPPPPWWWWWWWWWWW",
"WBBPPPPXXXXXXXBBBPPGGGGGWWWWWWWBBPPPPXXXXXXXBBBPPWWWWWWWWWWW",
"WWBPPPPPPXXXXXXXXPPWWWWWWWWWWWWWBPPPPPPXXXXXXXXPPWWWWWWWWWWW",
"WWBBBGGGPPPPPPPPPPPWWWWWWWWWWWWWBBBGPPPPPXXXBBBPPWWWWWWWWWWW",
"WBBBBGGGPPPPPPPPPPPWWWWWWWWWWWWBBBBGGGPPPXXXXXPPPWWWWWWWWWWW",
"WWWWWBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBWWWWWWWWWWWWWWWWWWWWWWWWW"

]
